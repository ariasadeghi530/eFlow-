async function getUsers() { let a = await new Promise((a, b) => { axios.get(`./admin/allusers`).then(({ data: c }) => { c ? a(c) : b(new Error("Error communicating with server")) }) }); return a } async function getUser(a) { let b = await new Promise((b, c) => { axios.get(`./admin/user/${a}`).then(({ data: a }) => { a ? b(a) : c(new Error("Error communicating with server")) }) }); return b } async function deleteUser(a) { let b = await new Promise((b, c) => { axios.get(`./admin/users/delete/${a}`).then(({ data: a }) => { a ? b(a) : c(new Error("Error communicating with server")) }) }); return b } function loadUsers() {
  getUsers().then(a => {
    $("#userTable").html(""), $("#totalUsers").text(a.length), a.forEach(a => {
      let b = 1 === a.active ? `<span class="badge badge-success">Activated</span>` : `<span class="badge badge-danger">Deactivated</span>`; let c = 1 === a.permissions ? `<span class="badge badge-info">Admin</span>` : `<span class="badge badge-light">User</span>`; let d = `
      <tr>
        <th scope="row">${a.id}</th>
        <td>${a.first_name}</td>
        <td>${a.last_name}</td>
        <td>${a.username}</td>
        <td>${a.email}</td>
        <td>${a.password}</td>
        <td>${b}</td>
        <td>${c}</td>
        <td>${a.createdAt}</td>
        <td>${a.updatedAt}</td>
        <td>
        <button id="${a.id}" type="button" class="btn btn-danger btn-sm deleteuser">Delete</button>
        <button id="${a.id}" type="button" class="btn btn-info btn-sm edituser">Edit</button>
        </td>
      </tr>
      `; $("#userTable").append(d)
    })
  }).catch(a => console.error(a))
} loadUsers(), $(document).on("click", a => { if (a.target.classList.contains("deleteuser")) { const b = confirm("Are you sure you want to delete this user?"); !0 == b && (deleteUser(a.target.id), loadUsers()) } a.target.classList.contains("edituser") && getUser(a.target.id).then(a => { $("#editTitle").text(`Edit User - ${a.username}`), $("#first_name").val(a.first_name), $("#last_name").val(a.last_name), $("#username").val(a.username), $("#email").val(a.email), $("#user_id").text(a.id), 1 === a.permissions && $("#checkAdmin").prop("checked", !0), 1 === a.active && $("#checkActive").prop("checked", !0), $("#editModal").modal("show") }).catch(a => console.error(a)) }), $("#editUserSave").on("click", () => { let a, b, c = parseInt($("#user_id").text()); a = !(!0 !== $("#checkActive").is(":checked")), b = !(!0 !== $("#checkAdmin").is(":checked")), axios.post(`/admin/users/update/${c}`, { first_name: $("#first_name").val(), last_name: $("#last_name").val(), username: $("#username").val(), email: $("#email").val(), active: a, permissions: b }).then(() => { }).catch(a => console.error(a)), $("#editModal").modal("hide"), loadUsers() });