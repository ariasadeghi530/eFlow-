let myUserId, currentMsgCount, msgArr; async function getMessages(a) { let b = await new Promise((b, c) => { axios.get(`./api/chat/messages/${a}`).then(({ data: a }) => { msgArr = [], a ? b(a) : c(new Error("Error communicating with server")) }) }); return b } function renderMessages(a) {
  $("#chatStream").html(""), getMessages(a).then(a => {
  currentMsgCount = a.length, a.forEach(a => {
    let b = `
            <div className="uk-alert">
              <h4>${a.user.username}</h4>
              <p>${a.text}</p>
            </div>
            <hr></hr>
              `; $("#chatStream").append(b); var c = document.getElementById("chatStream"); c.scrollTop = c.scrollHeight
  })
  }).catch(a => console.error(a))
} function getUrlVars() { var a = {}, b = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (b, c, d) { a[c] = d }); return a } function getUrlParam(a, b) { var c = b; return -1 < window.location.href.indexOf(a) && (c = getUrlVars()[a]), c } let currentChatToken = getUrlParam("token", "None"); axios.get("/api/users/checklogin").then(({ data: a }) => { myUserId = a.userId }).catch(a => console.error(a)), axios.get("/api/chat/getconvos").then(({ data: a }) => {
  a.forEach(a => {
    let b; a.user1 === myUserId ? axios.get(`/api/users/getbyid/${a.user2}`).then(({ data: a }) => { b = a }).then(() => {
      let c = `
              <li class="list-group-item"><a href="./chat?token=${a.chatToken}">${b.username} - ${a.chatName}</a></li>
            `; $("#conversations").append(c)
    }).catch(a => console.error(a)) : axios.get(`/api/users/getbyid/${a.user1}`).then(({ data: a }) => { b = a, console.log(b) }).then(() => {
      let c = `
              <li class="list-group-item"><a href="./chat?token=${a.chatToken}">${b.first_name} ${b.last_name} - (${b.username})</a></li>
            `; $("#conversations").append(c)
    }).catch(a => console.error(a))
  })
}).catch(a => console.error(a)), "None" === currentChatToken ? console.log(`No chat`) : (renderMessages(currentChatToken), setInterval(() => { axios.get(`/api/chat/messages/${currentChatToken}`).then(({ data: a }) => { currentMsgCount < a.length && renderMessages(currentChatToken) }).catch(a => console.error(a)) }, 3e3)), $("#chatSend").on("click", () => { let a = $("#chatInput").val(); axios.post(`/api/chat/new`, { msg: a, chatToken: currentChatToken }).then(() => { $("#chatInput").val("") }).catch(a => console.error(a)) });