let rawReports, tableData = []; async function getReports() { let a = await new Promise((a, b) => { $.get(`./getreports`, c => { c ? a(c) : b(new Error("Error communicating with server")) }) }); return a } function populateTable(a) { $("#reportTable").DataTable({ data: a, columns: [{ title: "Item ID" }, { title: "Item Name" }, { title: "Reported By" }, { title: "Comment" }, { title: "Status" }, { title: "Resolution" }, { title: "Report Date" }, { title: "Update Date" }, { title: "Actions" }], pageLength: 25, responsive: !0 }) } getReports().then(a => { rawReports = a, rawReports.forEach(a => { let b, c, d = []; switch (a.status) { case 0: b = "<span class=\"badge badge-pill badge-success\">Open</span>"; break; case 1: b = "<span class=\"badge badge-pill badge-danger\">Closed</span>"; }switch (a.resolution) { case 0: c = "<code>Unresolved</code>"; break; case 1: c = "<code>Item deleted</code>"; break; case 2: c = "<code>Item edited</code>"; break; case 3: c = "<code>Item left as-is</code>"; }d.push(a.item.id, a.item.name, a.user.username, a.comment, b, c, a.createdAt, a.updatedAt, `hello`), tableData.push(d) }), populateTable(tableData) }).catch(a => console.error(a));