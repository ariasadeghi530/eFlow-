let usersArr = []; async function getUsers() { let a = await new Promise((a, b) => { $.get(`./allusers`, c => { c ? a(c) : b(new Error("Error communicating with server")) }) }); return a } async function getUser(a) { let b = await new Promise((b, c) => { axios.get(`./user/${a}`).then(({ data: a }) => { a ? b(a) : c(new Error("Error communicating with server")) }) }); return b } async function deleteUser(a) { let b = await new Promise((b, c) => { axios.get(`./users/delete/${a}`).then(({ data: a }) => { a ? b(a) : c(new Error("Error communicating with server")) }) }); return b } function populateTable(a) { $("#userTable").DataTable({ data: a, columns: [{ title: "First" }, { title: "Last" }, { title: "Username" }, { title: "Email" }, { title: "Password" }, { title: "Active" }, { title: "Permissions" }, { title: "Join Date" }, { title: "Last Updated" }, { title: "Options" }], pageLength: 25, responsive: !0 }) } function loadUsers() {
  getUsers().then(a => {
    console.log(a), a.forEach(a => {
      let b = [], c = `
        <button id="${a.id}" type="button" class="btn btn-danger btn-sm deleteuser">Delete</button>
        <button id="${a.id}" type="button" class="btn btn-info btn-sm edituser">Edit</button>
        `; b.push(a.first_name, a.last_name, a.username, a.email, a.password, a.active, a.permissions, a.createdAt, a.updatedAt, c), usersArr.push(b)
    }), console.log(usersArr), populateTable(usersArr)
  }).catch(a => console.error(a))
} $(document).ready(function () { loadUsers() }), $(document).on("click", a => { if (a.target.classList.contains("deleteuser")) { const b = confirm("Are you sure you want to delete this user?"); !0 == b && (deleteUser(a.target.id), location.reload()) } a.target.classList.contains("edituser") && getUser(a.target.id).then(a => { $("#editTitle").text(`Edit User - ${a.username}`), $("#first_name").val(a.first_name), $("#last_name").val(a.last_name), $("#username").val(a.username), $("#email").val(a.email), $("#user_id").text(a.id), 1 === a.permissions && $("#checkAdmin").prop("checked", !0), 1 === a.active && $("#checkActive").prop("checked", !0), $("#editModal").modal("show") }).catch(a => console.error(a)) }), $("#editUserSave").on("click", () => { let a, b, c = parseInt($("#user_id").text()); a = !(!0 !== $("#checkActive").is(":checked")), b = !(!0 !== $("#checkAdmin").is(":checked")), axios.post(`/admin/users/update/${c}`, { first_name: $("#first_name").val(), last_name: $("#last_name").val(), username: $("#username").val(), email: $("#email").val(), active: a, permissions: b }).then(() => { }).catch(a => console.error(a)), $("#editModal").modal("hide"), location.reload() });