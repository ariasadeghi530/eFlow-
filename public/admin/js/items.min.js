let itemsArr = []; async function getItems() { let a = await new Promise((a, b) => { $.get(`./items/all`, c => { c ? a(c) : b(new Error("Error communicating with server")) }) }); return a } async function deleteItem(a) { let b = await new Promise((b, c) => { axios.get(`./items/delete/${a}`).then(({ data: a }) => { a ? b(a) : c(new Error("Error communicating with server")) }) }); return b } function populateTable(a) { $("#itemTable").DataTable({ data: a, columns: [{ title: "Item Name" }, { title: "Posted By" }, { title: "Description" }, { title: "Category" }, { title: "Price" }, { title: "Location" }, { title: "Sold?" }, { title: "Created" }, { title: "Last Updated" }, { title: "Options" }], pageLength: 25, responsive: !0 }) } function loadItems() {
  getItems().then(a => {
    a.forEach(a => {
      let b = [], c = `
        <button id="${a.id}" type="button" class="btn btn-danger btn-sm deleteitem">Delete</button>
        <button id="${a.id}" type="button" class="btn btn-info btn-sm edititem">Edit</button>
        `; b.push(a.name, a.user.username, a.description, a.category, a.price, a.location, a.isSold, a.createdAt, a.updatedAt, c), itemsArr.push(b)
    }), populateTable(itemsArr)
  }).catch(a => console.error(a))
} $(document).ready(function () { loadItems() }), $(document).on("click", a => { if (a.target.classList.contains("deleteitem")) { const b = confirm("Are you sure you want to delete this item?"); !0 == b && (deleteItem(a.target.id), location.reload()) } });